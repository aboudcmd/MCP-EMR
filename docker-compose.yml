version: '3.8'

services:
  # PostgreSQL for FHIR Server (start this first)
  fhir-db:
    image: postgres:15
    container_name: emr-fhir-db
    ports:
      - "5432:5432"  # Expose PostgreSQL port for debugging
    environment:
      - POSTGRES_DB=hapi
      - POSTGRES_USER=hapiuser
      - POSTGRES_PASSWORD=hapipass
    volumes:
      - fhir-data:/var/lib/postgresql/data
    networks:
      - emr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hapiuser -d hapi"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FHIR Server
  fhir-server:
    image: hapiproject/hapi:latest
    container_name: emr-fhir-server
    ports:
      - "8081:8080"
    environment:
      # Fix the driver class name
      - spring.datasource.driver-class-name=org.postgresql.Driver
      - spring.datasource.url=jdbc:postgresql://fhir-db:5432/hapi
      - spring.datasource.username=hapiuser
      - spring.datasource.password=hapipass
      # Remove or update the dialect
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
      # Fix the server address to match the exposed port
      - hapi.fhir.server_address=http://localhost:8081/fhir
      # Add these to ensure proper initialization
      - spring.jpa.hibernate.ddl-auto=update
      - spring.datasource.max-active=15
    depends_on:
      fhir-db:
        condition: service_healthy
    networks:
      - emr-network
    restart: unless-stopped

  # MCP Server
  mcp-server:
    build: ./mcp-server
    container_name: emr-mcp-server
    environment:
      - FHIR_SERVER_URL=http://fhir-server:8080/fhir
      - NODE_ENV=production
    depends_on:
      - fhir-server
    networks:
      - emr-network
    restart: unless-stopped

  # Backend API
  backend-api:
    build: ./backend-api
    container_name: emr-backend-api
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=production
      - GROQ_API_KEY=${GROQ_API_KEY}
      - MCP_SERVER_PATH=/app/mcp-server
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - ./mcp-server/dist:/app/mcp-server:ro
    depends_on:
      - mcp-server
      - fhir-server
    networks:
      - emr-network
    restart: unless-stopped

  # Frontend
  frontend:
    build: ./frontend
    container_name: emr-frontend
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:3001
    depends_on:
      - backend-api
    networks:
      - emr-network
    restart: unless-stopped

volumes:
  fhir-data:

networks:
  emr-network:
    driver: bridge